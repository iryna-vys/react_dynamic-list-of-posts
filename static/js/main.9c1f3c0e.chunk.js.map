{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/comments.js","App.jsx","index.js"],"names":["BASE_URL","getPosts","fetch","then","response","json","result","data","PostsList","posts","selectedPostId","onSelect","className","map","post","key","id","userId","title","type","style","backgroundColor","onClick","NewCommentForm","postId","setComments","useState","body","setBody","email","setEmail","name","setName","onSubmit","event","preventDefault","handleSubmit","placeholder","value","onChange","target","required","PostDetails","setPost","comments","commentsVisible","setCommentsVisible","loadComments","filter","comment","getPostComments","removeComment","commentId","method","deleteComment","useEffect","getPost","length","visible","JSON","stringify","headers","App","setPosts","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"mUAAaA,G,WAAW,kCCEXC,EAAW,kBACtBC,MAAM,GAAD,OAAIF,EAAJ,WACFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SCDdC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,SAA1B,OACvB,yBAAKC,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBACXH,EAAMI,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVJ,UAAU,mBAEV,6BACE,qCAEGE,EAAKG,OAFR,MAKCH,EAAKI,OAENR,IAAmBI,EAAKE,GAEtB,4BACEG,KAAK,SACLP,UAAU,2BACVQ,MAAO,CAAEC,gBAAiB,WAC1BC,QAAS,kBAAMX,EAAS,KAJ1B,SAUA,4BACEQ,KAAK,SACLP,UAAU,2BACVU,QAAS,kBAAMX,EAASG,EAAKE,MAH/B,gBC7BDO,G,MAAiB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACvC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAeA,OACE,0BACEpB,UAAU,iBACVqB,SAAU,SAAAC,GAAK,OAhBE,SAACA,GACpBA,EAAMC,iBACNV,EAAY,CACVD,SACAO,OACAF,QACAF,SAEFC,EAAQ,IACRE,EAAS,IACTE,EAAQ,IAMaI,CAAaF,KAEhC,yBAAKtB,UAAU,cACb,2BACEO,KAAK,OACLY,KAAK,OACLM,YAAY,YACZzB,UAAU,wBACV0B,MAAOP,EACPQ,SAAU,SAAAL,GAAK,OAAIF,EAAQE,EAAMM,OAAOF,WAI5C,yBAAK1B,UAAU,cACb,2BACEO,KAAK,OACLY,KAAK,QACLM,YAAY,aACZzB,UAAU,wBACV0B,MAAOT,EACPU,SAAU,SAAAL,GAAK,OAAIJ,EAASI,EAAMM,OAAOF,WAI7C,yBAAK1B,UAAU,cACb,8BACEmB,KAAK,OACLM,YAAY,oBACZzB,UAAU,wBACV0B,MAAOX,EACPY,SAAU,SAAAL,GAAK,OAAIN,EAAQM,EAAMM,OAAOF,QACxCG,UAAQ,KAIZ,4BACEtB,KAAK,SACLP,UAAU,wCAFZ,oBCnDO8B,G,MAAc,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OAC5B,EAAwBE,mBAAS,MAAjC,mBAAOZ,EAAP,KAAa6B,EAAb,KACA,EAAgCjB,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBnB,EAAjB,KACA,EAA8CC,oBAAS,GAAvD,mBAAOmB,EAAP,KAAwBC,EAAxB,KAEMC,EAAe,YCbQ,SAAAvB,GAAM,OACnCtB,MAAM,GAAD,OAAIF,EAAJ,cACFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QACtBJ,MAAK,SAAAyC,GAAQ,OAAIA,EAASI,QAAO,SAAAC,GAAO,OAAIA,EAAQzB,SAAWA,SDUhE0B,CAAgB1B,GACbrB,KAAKsB,IAQJ0B,EAAgB,SAACC,IChBI,SAAAA,GAAS,OACpClD,MAAM,GAAD,OAAIF,EAAJ,qBAAyBoD,GAAa,CAAEC,OAAQ,WAClDlD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SDcvB+C,CAAcF,GACXjD,MAAK,kBAAM4C,QAShB,OANAQ,qBAAU,YHjBW,SAAA/B,GAAM,OAC3BtB,MAAM,GAAD,OAAIF,EAAJ,kBAAsBwB,IACxBrB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SGevBiD,CAAQhC,GACLrB,KAAKwC,GACRI,MACC,CAACvB,IAGF,yBAAKZ,UAAU,eACb,6CACGE,EAGC,oCACE,6BAASF,UAAU,qBACjB,2BAAIE,EAAKa,SAERiB,EAASa,QACV,6BAAS7C,UAAU,yBACjB,4BACEO,KAAK,SACLP,UAAU,SACVU,QAAS,WACPwB,GAAmB,SAAAY,GAAO,OAAKA,OAG/Bb,EACE,gBACA,iBAGHA,GACC,wBAAIjC,UAAU,qBACXgC,EAAS/B,KAAI,SAAAoC,GAAO,OACnB,wBACElC,IAAKkC,EAAQjC,GACbJ,UAAU,0BAEV,4BACEO,KAAK,SACLP,UAAU,oCACVU,QAAS,kBAAM6B,EAAcF,EAAQjC,MAHvC,KAOA,2BAAIiC,EAAQtB,YAQ1B,iCACE,yBAAKf,UAAU,6BACb,kBAAC,EAAD,CACEY,OAAQA,EACRC,YAlEO,SAACwB,GCLA,IAAA1C,KDMX0C,ECLb/C,MAAM,GAAD,OAAIF,EAAJ,aAAyB,CAC5BqD,OAAQ,OACR1B,KAAMgC,KAAKC,UAAUrD,GACrBsD,QAAS,CACP,eAAgB,qCAGjB1D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SDFpBJ,MAAK,kBAAM4C,aAiBX,4BE2BQe,EA3DH,WACV,MAA0BpC,mBAAS,IAAnC,mBAAOjB,EAAP,KAAcsD,EAAd,KACA,EAA4CrC,mBAAS,GAArD,mBAAOhB,EAAP,KAAuBsD,EAAvB,KAOA,OALAT,qBAAU,WACRtD,IACGE,MAAK,SAAAG,GAAM,OAAIyD,EAASzD,QAC1B,IAGD,yBAAKM,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,4BACEA,UAAU,qBACV2B,SAAU,SAACL,GLhBK,IAAAjB,MKiBAiB,EAAMM,OAAOF,MLhBvCrC,IACGE,MAAK,SAAAG,GAAM,OAAIA,EAAO0C,QAAO,SAAAlC,GAAI,OAAIA,EAAKG,SAAWA,SKgBzCd,MAAK,SAAAG,GAAM,OAAIyD,EAASzD,QAG7B,4BAAQgC,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,wBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,MAAd,oBAKN,0BAAM1B,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,MAAOA,EACPC,eAAgBA,EAChBC,SAAUqD,KAId,yBAAKpD,UAAU,gBACXF,EAGE,kBAAC,EAAD,CAAac,OAAQd,IAFrB,uBClDduD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9c1f3c0e.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPosts = () => (\n  fetch(`${BASE_URL}/posts`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getUserPosts = userId => (\n  getPosts()\n    .then(result => result.filter(post => post.userId === userId))\n);\n\nexport const getPost = postId => (\n  fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, selectedPostId, onSelect }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n            </b>\n            {post.title}\n          </div>\n          {(selectedPostId === post.id)\n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                style={{ backgroundColor: '#4d457b' }}\n                onClick={() => onSelect(0)}\n              >\n                Close\n              </button>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => onSelect(post.id)}\n              >\n                Open\n              </button>\n            )\n          }\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf({}).isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [body, setBody] = useState('');\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setComments({\n      postId,\n      name,\n      email,\n      body,\n    });\n    setBody('');\n    setEmail('');\n    setName('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => handleSubmit(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getPost } from '../../api/posts';\nimport { getPostComments, addComment, deleteComment } from '../../api/comments';\n\nimport { NewCommentForm } from '../NewCommentForm';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentsVisible, setCommentsVisible] = useState(true);\n\n  const loadComments = () => {\n    getPostComments(postId)\n      .then(setComments);\n  };\n\n  const setNewComments = (comment) => {\n    addComment(comment)\n      .then(() => loadComments());\n  };\n\n  const removeComment = (commentId) => {\n    deleteComment(commentId)\n      .then(() => loadComments());\n  };\n\n  useEffect(() => {\n    getPost(postId)\n      .then(setPost);\n    loadComments();\n  }, [postId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {(!post)\n        ? `Loading post's details`\n        : (\n          <>\n            <section className=\"PostDetails__post\">\n              <p>{post.body}</p>\n            </section>\n            {!!comments.length && (\n              <section className=\"PostDetails__comments\">\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    setCommentsVisible(visible => !visible);\n                  }}\n                >\n                  {(commentsVisible)\n                    ? 'Hide comments'\n                    : 'Show comments'\n                  }\n                </button>\n                  {commentsVisible && (\n                    <ul className=\"PostDetails__list\">\n                      {comments.map(comment => (\n                        <li\n                          key={comment.id}\n                          className=\"PostDetails__list-item\"\n                        >\n                          <button\n                            type=\"button\"\n                            className=\"PostDetails__remove-button button\"\n                            onClick={() => removeComment(comment.id)}\n                          >\n                            X\n                          </button>\n                          <p>{comment.body}</p>\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n              </section>\n            )}\n\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  postId={postId}\n                  setComments={setNewComments}\n                />\n              </div>\n            </section>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = postId => (\n  fetch(`${BASE_URL}/comments`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(comments => comments.filter(comment => comment.postId === postId))\n);\n\nexport const deleteComment = commentId => (\n  fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' })\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const addComment = data => (\n  fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getPosts, getUserPosts } from './api/posts';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    getPosts()\n      .then(result => setPosts(result));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              getUserPosts(+event.target.value)\n                .then(result => setPosts(result));\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graghm</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            onSelect={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {!selectedPostId\n            ? 'No post selected'\n            : (\n              <PostDetails postId={selectedPostId} />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}